{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./js/modules/calc.js","webpack:///./js/modules/cards.js","webpack:///./js/modules/forms.js","webpack:///./js/modules/modal.js","webpack:///./js/modules/slider.js","webpack:///./js/modules/tabs.js","webpack:///./js/modules/timer.js","webpack:///./js/script.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,6DAA6D;;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;;AAET;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;;;AAGA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;AC5HA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA,2BAA2B,SAAS,OAAO,SAAS;AACpD,kDAAkD,WAAW;AAC7D,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA,0DAA0D,WAAW;AACrE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,+CAA+C,IAAI,YAAY,cAAc;AAC7E;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;;AAET;;AAEA,uB;;;;;;;;;;;AClEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,qDAAqD;AACrD,iBAAiB;AACjB,iCAAiC;AACjC,iBAAiB;;AAEjB,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,uB;;;;;;;;;;;AC3FA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,kCAAkC;AAClC;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;;;;;;AC3DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uDAAuD;AACvD,+CAA+C;AAC/C;;AAEA;AACA;AACA;AACA;AACA,sCAAsC,WAAW,EAAE;AACnD,SAAS;AACT,6CAA6C;AAC7C;AACA;;AAEA;AACA,6BAA6B;AAC7B,gCAAgC,cAAc,EAAE;AAChD,kCAAkC,WAAW,EAAE;AAC/C,KAAK,OAAO;AACZ,0CAA0C;AAC1C,yCAAyC;AACzC;;;AAGA,wDAAwD;AACxD,uCAAuC;AACvC,8CAA8C;;AAE9C,4CAA4C;;AAE5C;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,mBAAmB,OAAO;AAC7C;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;AACnE;AACA,uBAAuB;AACvB,SAAS,OAAO;AAChB;AACA;AACA;AACA;;AAEA,qDAAqD,OAAO,KAAK;;AAEjE;AACA,0CAA0C;AAC1C;AACA,SAAS,OAAO;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;AACA;;AAEA,qDAAqD,OAAO,KAAK;;AAEjE;AACA,8BAA8B;AAC9B,uCAAuC;AACvC,SAAS,OAAO;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA,wB;;;;;;;;;;;ACnMA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC,SAAS;;AAET;AACA,4DAA4D;AAC5D,SAAS;AACT;;AAEA,oCAAoC;AACpC,+CAA+C;AAC/C,wDAAwD;AACxD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC;;AAEpC;AACA,uCAAuC;AACvC,qCAAqC;AACrC,qCAAqC;AACrC,sCAAsC;AACtC;AACA,aAAa;AACb;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;ACjDA;AACA;;AAEA;;AAEA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;;;;;;;ACpEa;;AAEb;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,eAAe,mBAAO,CAAC,4CAAgB;AACvC,gBAAgB,mBAAO,CAAC,8CAAiB;AACzC,iBAAiB,mBAAO,CAAC,gDAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./js/script.js\");\n","function calc() {\n    // Calc\n\n    const result = document.querySelector('.calculating__result span');\n\n    let sex, height, weight, age, ratio;\n\n    if (localStorage.getItem('sex')) {\n        sex = localStorage.getItem('sex');\n    } else {\n        sex = 'female';\n        localStorage.setItem('sex', 'female');\n    }\n\n    if (localStorage.getItem('ratio')) {\n        ratio = localStorage.getItem('ratio');\n    } else {\n        ratio = 1.375;\n        localStorage.setItem('ratio', 1.375);\n    }\n\n\n    function calcTotal() {\n        if (!sex || !height || !weight || !age || !ratio) {\n            result.textContent = '____';\n            return;\n        } // Проверка, если нет хотя бы одной данной из списка, функция запускать не будет.\n\n        if (sex === 'female') {\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\n        } else {\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\n        }\n    }\n\n    calcTotal();\n\n    function initLocalSettings(selector, activeClass) {\n        const elements = document.querySelectorAll(selector);\n\n        elements.forEach(elem => {\n            elem.classList.remove(activeClass);\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\n                elem.classList.add(activeClass);\n            }\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\n                elem.classList.add(activeClass);\n            }\n        });\n    }\n\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function getStaticInformation(selector, activeClass) {\n        const elements = document.querySelectorAll(selector); // Получаем все эелементы внутри этого родителя.\n\n        // Отслеживаем клики по родительскому элементу\n\n        elements.forEach(elem => {\n            elem.addEventListener('click', (e) => {\n                if (e.target.getAttribute('data-ratio')) {\n                    // для активности\n                    ratio = +e.target.getAttribute('data-ratio');\n                    // означает, что если мы кликнули по диву, функция вытащит значение из data-атрибута.\n                    // Запоминаем значения в localStorage\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\n                } else {\n                    // для пола, который не имеет дата атрибут\n                    sex = e.target.getAttribute('id');\n                    // Запоминаем значения в localStorage\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\n                }\n\n                // Убераем класс активности у всех элементов и назначаем только тому на который кликаем\n                elements.forEach(elem => {\n                    elem.classList.remove(activeClass);\n                });\n                e.target.classList.add(activeClass);\n                calcTotal();\n            });\n        });\n\n    }\n\n\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\n\n    function getDynamicInformation(selector) {\n        const input = document.querySelector(selector);\n\n        input.addEventListener('input', () => {\n            // проверка на правильность введенных данных пользователем\n\n            if (input.value.match(/\\D/g)) {\n                input.style.border = '1px solid red';\n            } else {\n                input.style.border = 'none';\n            }\n\n            // проверят что это, возраст или вес или рост при помощи switchCase\n            switch (input.getAttribute('id')) {\n                case 'height':\n                    height = +input.value;\n                    break;\n                case 'weight':\n                    weight = +input.value;\n                    break;\n                case 'age':\n                    age = +input.value;\n                    break;\n            } // теперь функция будет ссылкаться на уникальный индификатор и записывать данные в нужную переменную\n            calcTotal();\n        });\n\n    }\n\n\n    getDynamicInformation('#height');\n    getDynamicInformation('#weight');\n    getDynamicInformation('#age');\n}\n\nmodule.exports = calc;","function cards() {\n    // Используем классы для карточек\n\n    class MenuCard {\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\n            this.src = src;\n            this.alt = alt;\n            this.title = title;\n            this.descr = descr;\n            this.price = price;\n            this.classes = classes;\n            this.parent = document.querySelector(parentSelector);\n            this.transfer = 71;\n            this.changeToRUB();\n        }\n        changeToRUB() {\n            this.price = this.price * this.transfer;\n        }\n        render() {\n            const element = document.createElement('div');\n            if (this.classes.length === 0) {\n                element.classList.add('menu__item');\n\n            } else {\n                this.classes.forEach(className => element.classList.add(className));\n            }\n            // После аругмента price, теперь мы используем оператор rest, который будет принимать в себя название класса div'a, для того что бы использовать классы из массива который нам пришел, мы перебираем его с помощью метода forEach, где каждый класс это аругмент className, после чего мы говорим функции перебора классов что мы добавляем в список классов className, т.е тот класс который пришел к нам из массива аругмента ...classes.\n            element.innerHTML = `\n                <img src=${this.src} alt=${this.alt}>\n                <h3 class=\"menu__item-subtitle\">${this.title}</h3>\n                <div class=\"menu__item-descr\">${this.descr}</div>\n                <div class=\"menu__item-divider\"></div>\n                <div class=\"menu__item-price\">\n                    <div class=\"menu__item-cost\">Цена:</div>\n                    <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\n                </div>\n        `;\n            this.parent.append(element);\n        }\n    }\n\n    const getResourse = async (url) => {\n        const result = await fetch(url);\n\n        if (!result.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${result.status}`);\n        }\n\n        return await result.json();\n    };\n\n    getResourse('http://localhost:3000/menu')\n        .then(data => {\n            data.forEach(({\n                img,\n                altimg,\n                title,\n                descr,\n                price\n            }) => {\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\n            });\n        });\n\n}\n\nmodule.exports = cards;","function forms() {\n    // Forms \n\n    const forms = document.querySelectorAll('form');\n\n    const message = {\n        loading: 'img/form/spinner.gif',\n        succes: 'Мы скоро с Вами свяжемся!',\n        failure: 'Что-то пошло не так...'\n    };\n\n    forms.forEach(item => {\n        bindPostData(item);\n    });\n\n    const postData = async (url, data) => {\n        const result = await fetch(url, {\n            method: 'POST', // Каким образом отправляем?\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: data // Что именно отправляем?\n        });\n\n        return await result.json();\n    };\n\n    function bindPostData(form) {\n        form.addEventListener('submit', (e) => {\n            e.preventDefault();\n\n            const statusMessage = document.createElement('img'); // показывает спинер\n            statusMessage.src = message.loading;\n            statusMessage.style.cssText = `\n                display: block;\n                margin: 0 auto;\n                margin-top: 5 px;\n                width: 25px;\n                height: 25px;\n                `;\n            form.insertAdjacentElement('afterend', statusMessage);\n\n            const formData = new FormData(form); // сбор всех данных из формы\n\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\n\n            postData('http://localhost:3000/requests', json)\n                .then(data => {\n                    console.log(data);\n                    showThanksModal(message.succes);\n                    statusMessage.remove();\n                }).catch(() => {\n                    showThanksModal(message.failure); // действие в случае неудачи\n                }).finally(() => {\n                    form.reset(); // действие в любом случае\n                });\n\n        });\n    }\n\n    function showThanksModal(message) {\n        const prevModalDialog = document.querySelector('.modal__dialog');\n\n        prevModalDialog.classList.add('hide');\n        openModalContent();\n\n        const thanksModal = document.createElement('div');\n        thanksModal.classList.add('modal__dialog');\n\n        thanksModal.innerHTML = `\n            <div class=\"modal__content\">\n                <div class=\"modal__close\" data-close>×</div>\n                <div class=\"modal__title\">${message}</div>\n            </div>\n            `;\n\n        document.querySelector('.modal').append(thanksModal);\n\n        setTimeout(() => {\n            thanksModal.remove();\n            prevModalDialog.classList.add('show');\n            prevModalDialog.classList.remove('hide');\n            closeModalContent();\n        }, 4000);\n    }\n\n    fetch('http://localhost:3000/menu')\n        .then(data => data.json())\n        .then(result => console.log(result));\n}\n\nmodule.exports = forms;","function modal() {\n    // Modal\n\n    const modalTrigger = document.querySelectorAll('[data-modal]'),\n        modalContent = document.querySelector('.modal');\n\n\n    // Так как одно и тоже действие будет повторяется, обязательно выводим его в функцию\n    function openModalContent() {\n        modalContent.style.display = 'block';\n        document.body.style.overflow = 'hidden';\n        clearInterval(modalContentTimerId);\n    }\n\n    function closeModalContent() {\n        modalContent.style.display = '';\n        document.body.style.overflow = '';\n    }\n\n    // 1) перебираем псевдомассив modalTrigger с помощью forEach\n    modalTrigger.forEach(btn => {\n        btn.addEventListener('click', openModalContent);\n    });\n\n\n    // Заменили на верхнюю с использованием функции\n    /* modalCloseBtn.addEventListener('click', () => {\n        modalContent.style.display = '';\n        document.body.style.overflow = '';\n    }); */\n\n    modalContent.addEventListener('click', (e) => {\n        if (e.target === modalContent || e.target.getAttribute('data-close') == '') {\n            /* modalContent.style.display = '';\n            document.body.style.overflow = ''; */ // так же как и выше, вызываем\n            // а не вписываем закрывающую функцию\n            closeModalContent();\n\n        }\n    });\n\n    document.addEventListener('keydown', (e) => {\n        if (e.code === 'Escape') { // при моём способе не нужно использовать contains\n            closeModalContent();\n        }\n    });\n\n    const modalContentTimerId = setTimeout(openModalContent, 500000);\n\n    function showModalContentByScroll() {\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\n            openModalContent();\n            window.removeEventListener('scroll', showModalContentByScroll);\n        }\n    }\n\n    window.addEventListener('scroll', showModalContentByScroll);\n}\n\nmodule.exports = modal;","function slider() {\n    // Slider \n\n    const slides = document.querySelectorAll('.offer__slide'),\n        slider = document.querySelector('.offer__slider'),\n        prev = document.querySelector('.offer__slider-prev'),\n        next = document.querySelector('.offer__slider-next'),\n        total = document.querySelector('#total'),\n        current = document.querySelector('#current'),\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\n        slidesField = document.querySelector('.offer__slider-inner'),\n        width = window.getComputedStyle(slidesWrapper).width;\n\n    let slideIndex = 1;\n    let offset = 0;\n\n    //Функция активности точек\n    function activeDotStyle() {\n        // Стиль при активности точки\n        dots.forEach(dot => dot.style.opacity = '0.5'); // изначально стиль каждой точки 50% непрозрачности\n        dots[slideIndex - 1].style.opacity = 1; // берем определенный индекс, который равен slideIndex в данный момент - 1, получаем индекс того слайда на котором находится пользователь и даем ему непрозрачность 100%.\n    }\n\n    //Функция изменения слайда на странице\n    function changeSlide() {\n        // Изменение номер слайда на странице\n        if (slides.length < 10) {\n            current.textContent = `0${slideIndex}`; // меняем значение отображаемое на странице при помощи textContent в случае если меньше 10 \n        } else {\n            current.textContent = slideIndex; // меняем значение отображаемое на странице при помощи textContent в случае если больше 10 \n        }\n    }\n\n    // Проверка чисел > или < 10\n    if (slides.length < 10) { // если цифра в счетчике меньше 10, то\n        total.textContent = `0${slides.length}`; // перед этой цифрой записываться ноль в total - т.е в значение общего кол-ва слайдов\n        current.textContent = `0${slideIndex}`; // перед этой цифрой записываться ноль в значение current - т.е в ту позицию на которой находится пользователь(номер данного слайда)\n    } else { // в другом случае, если больше 10,\n        total.textContent = slides.length; // общшее кол-во слайда не будет добавлять 0 перед числом\n        current.textContent = slideIndex; // номер данного слайда не будет добавлять 0 перед числом\n    }\n\n\n    slidesField.style.width = 100 * slides.length + '%'; // Размер ширины блока со всеми слайдами\n    slidesField.style.display = 'flex'; // Выстраивание всех слайдов по горизонтали\n    slidesField.style.transition = '0.5s all'; // Плавное переключение слайдов\n\n    slidesWrapper.style.overflow = 'hidden'; // скрытие лишних слайдов из видимости, скрывает те, что находятся за пределами wrapper\n\n    // Устанавливаем всем слайдерам одинаковую ширину\n    slides.forEach(slide => {\n        slide.style.width = width;\n    });\n\n    //_________________________\n\n    // Точки переключения\n    // Создаем и стилизуем блок с точками\n    slider.style.position = 'relative';\n\n    const indicators = document.createElement('ol'),\n        dots = [];\n    indicators.classList.add('carousel-indicators');\n    indicators.style.cssText = `\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        z-index: 15;\n        display: flex;\n        justify-content: center;\n        margin-right: 15%;\n        margin-left: 15%;\n        list-style: none;\n    `;\n    // помещаем контейнер для точек, в общую коробочку со всеми элементами слайдера\n    slider.append(indicators);\n\n    // Создаем кол-во точек равное кол-ву слайдов\n    for (let i = 0; i < slides.length; i++) { // создает определенное кол-во точек ориентируясь на slides.lenght\n        // создаем точки\n        const dot = document.createElement('li');\n        dot.setAttribute('data-slide-to', i + 1); // Устанавливает каждой точке атрибут(т.е к какому слайду она будет относиться) и устанавливает нумерацию начиная с 1.\n        // Стилизуем точки\n        dot.style.cssText = `\n            box-sizing: content-box;\n            flex: 0 1 auto;\n            width: 30px;\n            height: 6px;\n            margin-right: 3px;\n            margin-left: 3px;\n            cursor: pointer;\n            background-color: #fff;\n            background-clip: padding-box;\n            border-top: 10px solid transparent;\n            border-bottom: 10px solid transparent;\n            opacity: .5;\n            transition: opacity .6s ease;\n        `;\n\n        // индикатор активности кнопки(стиль активности)\n        if (i == 0) {\n            dot.style.opacity = 1;\n        }\n\n        // помещаем точку в заранее созданный для неё контейнер\n        indicators.append(dot);\n        // помещаем все точки в массив \n        dots.push(dot); // массив можно использовать\n    }\n\n    // Далее переходим в обработчики событий\n\n    //_________________________\n\n    // Удаляющая числа функция\n\n    function removeNumbers(str) {\n        return +str.replace(/\\D/g, '');\n    }\n\n    // Click на кнопку next\n    next.addEventListener('click', () => {\n        if (offset == removeNumbers(width) * (slides.length - 1)) { // если положение слайда = положению последнего слайда - 1\n            // ВАЖНАЯ ЗАМЕТКА - МЫ ПОМЕНЯЛИ slice на replase, что бы удалить все 'НЕ ЧИСЛА'!!_________________\n            offset = 0; // тогда положение должно переключиться на начало\n        } else { // в другом случае\n            offset += removeNumbers(width);\n            // ВАЖНАЯ ЗАМЕТКА - МЫ ПОМЕНЯЛИ slice на replase, что бы удалить все 'НЕ ЧИСЛА'!!_________________\n            // добавиться ширина еще одного слайда и картинка сместится дальше.\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`; // Отвечает за сдвиг слайдера в коробочке inner, translateX - на сколько будет сдвигаться элемент(аргумент в скобке-сторона,где отрицательное число значит влево,а положительное вправо)\n\n        // Проверка для того, что бы правильно работало значение отображаемое в счетчике, при условии что он дошел до конца\n        if (slideIndex == slides.length) { // если счетчик дошел до конца, то значение slideIndex при click будет = 1 и цифра на сайте заменится единицой.\n            slideIndex = 1;\n        } else { // в другом случае, к цифре добавится +1\n            slideIndex++;\n        }\n\n        // Изменение номер слайда на странице\n        changeSlide();\n        // стиль при активности точек\n        activeDotStyle();\n    });\n\n    // Click на кнопку prev\n    prev.addEventListener('click', () => {\n        if (offset == 0) { // Если положением = 0 и мы двигаем назад\n            offset = removeNumbers(width) * (slides.length - 1);\n            // ВАЖНАЯ ЗАМЕТКА - МЫ ПОМЕНЯЛИ slice на replase, что бы удалить все 'НЕ ЧИСЛА'!!_________________\n            // тогда положение станет равно последнему слайду и нажатие переключит его на последний слайд\n        } else { // в другом случае \n            offset -= removeNumbers(width);\n            // ВАЖНАЯ ЗАМЕТКА - МЫ ПОМЕНЯЛИ slice на replase, что бы удалить все 'НЕ ЧИСЛА'!!_________________\n            // добавится ширина еще одного слайда и картинка сместится дальше\n        }\n\n        slidesField.style.transform = `translateX(-${offset}px)`; // Отвечает за сдвиг слайдера в коробочке inner, translateX - на сколько будет сдвигаться элемент(аргумент в скобке-сторона,где отрицательное число значит влево,а положительное вправо)\n\n        // Проверка для того, что бы правильно работало значение отображаемое в счетчике, при условии что он дошел до конца\n        if (slideIndex == 1) { // когда мы находимся на первом слайде, при клике на кнопку предыдущего слайда\n            slideIndex = slides.length; // будет смещение в самый конец слайдов\n        } else { // в другом случае, от цифры будет вычитаться -1\n            slideIndex--;\n        }\n\n        // Изменение номер слайда на странице\n        changeSlide();\n        // стиль при активности точек\n        activeDotStyle();\n    });\n\n    // Функционал точек(переключение слайдов, изменение порядкового номера при нажатии на точку)    \n    dots.forEach(dot => {\n        // навешиваем на каждую точку обработчик события click\n        // Атрибут собитя нужен для того что бы мы могли кликать на кнопки, обхект события это - кнопка с атрибутом который был добавлен в начале.\n        dot.addEventListener('click', (e) => {\n            const slideTo = e.target.getAttribute('data-slide-to');\n\n            slideIndex = slideTo; // кликнули на 2 позицию slideIndex будет = 2, соответственно цифра поменяется в счетчике\n\n            // смещение слайда\n            offset = removeNumbers(width) * (slideTo - 1);\n            slidesField.style.transform = `translateX(-${offset}px)`;\n            // ВАЖНАЯ ЗАМЕТКА - МЫ ПОМЕНЯЛИ slice на replase, что бы удалить все 'НЕ ЧИСЛА'!!_________________\n            // Изменение номер слайда на странице\n            changeSlide();\n            // Стиль при активности точки\n            activeDotStyle();\n        });\n    });\n}\n\nmodule.exports = slider;","function tabs() {\n    // Tabs\n\n    const tabs = document.querySelectorAll('.tabheader__item'),\n        tabsContent = document.querySelectorAll('.tabcontent'),\n        tabsParent = document.querySelector('.tabheader__items');\n\n    function hideTabContent() {\n        tabsContent.forEach(item => {\n            item.style.display = 'none'; // скрываем контент вкладки \n        });\n\n        tabs.forEach(item => {\n            item.classList.remove('tabheader__item_active'); // Удаляем внутри класслиста класс активности кнопки\n        });\n    }\n\n    function showTabContent(i = 0) { // i - определенный таб (i = 0, значит что если не выбрано то по умолчанию 0)\n        tabsContent[i].style.display = 'block'; // возвращаем определенный контент\n        tabs[i].classList.add('tabheader__item_active'); // возвращаем определенной ссылке меню класс актив\n    }\n\n    hideTabContent();\n    showTabContent();\n\n    /* Сейчас при помощи делегирования событий я сделаю событие клика на родителя меню, при помощи event.target где\n    event это каждое событие клика, а таргет это определенная цель на которую кликают внутри блока\n    с этими целями */\n\n    tabsParent.addEventListener('click', (event) => {\n        const target = event.target; // создаем переменную что бы постоянно не писать event.target\n\n        if (target && target.classList.contains('tabheader__item')) {\n            tabs.forEach((item, i) => { // item - каждый элемент i порядковый номер элемента\n                if (target == item) { // если элемент который кликнули == одному из перебираемых элементов - то...\n                    hideTabContent(); // то выполнится функция и скроются все элементы\n                    showTabContent(i); // то выполнится функция и покажется элемент по которому кликнули\n                }\n            });\n        }\n    });\n\n    /* target.classList.contains = classList - обращается ко всем классам элемента, в нашем случае ко всем классам \n    того элемента на который производится клик, contains - проверяет если ли данный класс у этого элемента, и если \n    он будет if(target &&(и) target.classList.contains('tabheader__item')), тогда выполнится дейтствие которое мы \n    зададим. Необходимо что бы при клике на объект определился номер элемента и этот номер элемента \n    использовался в функции showTabContent*/\n}\n\nmodule.exports = tabs;","function timer() {\n    // Timer \n\n    const deadline = '2020-08-20';\n\n    // Функция рассчитывающая разницу между сейчас и дедлайном(результат отоброжаемый на странице)\n\n    function getTimeRemaining(endtime) { // разница между сейчас и дедлайном, аргумент - дедлайн\n        const t = Date.parse(endtime) - Date.parse(new Date()),\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\n            hours = Math.floor((t / (1000 * 60 * 60) % 24)),\n            minutes = Math.floor((t / (1000 * 60) % 60)),\n            seconds = Math.floor((t / 1000) % 60);\n        // операции рассчитывающие оставшееся время до дедлайна\n        // они существуют только внутри функции, поэтому возвращаем их ввиде объекта\n        return {\n            'total': t, // используется для завершения таймера, когда t будет равно отрицательному числу\n            'days': days,\n            'hours': hours,\n            'minutes': minutes,\n            'seconds': seconds\n        };\n    }\n    // функция помошник - которая добавляет 0 перед числами меньше 10\n    function getZero(num) {\n        // Если число больше или равно 0 и меньше 10, мы добавим перед ним цифру 0\n        if (num >= 0 && num < 10) {\n            return `0${num}`;\n            // Если не произойдет это условие то оставим как есть\n        } else {\n            return num;\n        }\n    }\n\n    // Функция устонавливающая таймер на страницу\n\n    function setClock(selector, endtime) { // аргументы: - главный объект куда устанавл. время и дедлайн\n        // 1) получаем все элементы со страницы\n        const timer = document.querySelector(selector),\n            days = timer.querySelector('#days'),\n            hours = timer.querySelector('#hours'),\n            minutes = timer.querySelector('#minutes'),\n            seconds = timer.querySelector('#seconds'),\n            // запускаем функцию updateClock каждую секунду, что бы менялось время на странице\n            timeInterval = setInterval(updateClock, 1000);\n\n        updateClock(); // убираем мигание верстки\n\n        // 2) Внутри этой функции, функция обновляющая тамер каждую секунду\n\n        function updateClock() {\n            // 1) рассчет времени на момент - сейчас\n            const t = getTimeRemaining(endtime);\n            // 2) отображаем данные на страницу \n            days.innerHTML = getZero(t.days);\n            hours.innerHTML = getZero(t.hours);\n            minutes.innerHTML = getZero(t.minutes);\n            seconds.innerHTML = getZero(t.seconds);\n            // 3) Остановить таймер по завершению дедлайна\n            if (t.total <= 0) {\n                clearInterval(timeInterval);\n            }\n        }\n    }\n\n    setClock('.timer', deadline);\n}\n\nmodule.exports = timer;","'use strict';\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    const tabs = require('./modules/tabs'),\n        timer = require('./modules/timer'),\n        modal = require('./modules/modal'),\n        cards = require('./modules/cards'),\n        calc = require('./modules/calc'),\n        forms = require('./modules/forms'),\n        slider = require('./modules/slider');\n\n    tabs();\n    timer();\n    modal();\n    cards();\n    calc();\n    forms();\n    slider();\n});  "],"sourceRoot":""}